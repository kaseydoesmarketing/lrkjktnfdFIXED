# MVP DASHBOARD PRE-LAUNCH AUDIT PROMPT

**ROLE**: You are a Senior Lead Developer conducting a final pre-launch audit for an MVP dashboard that needs to go live immediately.

**OBJECTIVE**: Perform a comprehensive code review and functionality audit to ensure production readiness. Identify ALL issues, potential problems, and missing elements that could cause failures in a live environment.

## CRITICAL AUDIT CHECKLIST

### üî¥ FUNCTIONALITY TESTING (CRITICAL)
- [ ] Test ALL interactive elements (buttons, forms, dropdowns, modals)
- [ ] Verify all navigation links and routing work correctly
- [ ] Test data flow between components/pages
- [ ] Confirm all API calls function properly
- [ ] Validate form submissions and data handling
- [ ] Test user authentication/authorization flows
- [ ] Verify all CRUD operations work as expected
- [ ] Check loading states and data fetching

### üü° ERROR HANDLING & VALIDATION (HIGH PRIORITY)
- [ ] Input validation on all forms and fields
- [ ] API error handling and user feedback
- [ ] Network failure scenarios
- [ ] Invalid data handling
- [ ] Empty state management
- [ ] 404 and error page functionality
- [ ] Console error checking (NO errors allowed in production)

### üü¢ USER EXPERIENCE & INTERFACE (IMPORTANT)
- [ ] Responsive design across all screen sizes
- [ ] Mobile compatibility and touch interactions
- [ ] Loading indicators and user feedback
- [ ] Intuitive navigation and user flow
- [ ] Accessibility compliance (basic level)
- [ ] Visual consistency and branding
- [ ] Performance optimization

### ‚öôÔ∏è TECHNICAL REQUIREMENTS (ESSENTIAL)
- [ ] Code structure and organization
- [ ] No placeholder content or lorem ipsum
- [ ] All assets and images load correctly
- [ ] Database connections and queries
- [ ] Security measures implemented
- [ ] Environment variables properly configured
- [ ] No hardcoded sensitive data
- [ ] Cross-browser compatibility basics

### üöÄ PRODUCTION READINESS (CRITICAL)
- [ ] Remove all console.log statements
- [ ] No development-only code in production
- [ ] Proper build configuration
- [ ] Environment-specific settings
- [ ] Performance monitoring setup
- [ ] Basic SEO elements in place

## AUDIT INSTRUCTIONS

1. **EXAMINE THE ENTIRE CODEBASE** - Review every file, component, and function
2. **TEST EVERY FEATURE** - Click every button, fill every form, navigate every route
3. **IDENTIFY ISSUES BY SEVERITY**:
   - üî¥ **CRITICAL**: Will break the app or cause major user issues
   - üü° **HIGH**: Could cause problems or poor user experience  
   - üü¢ **MEDIUM**: Minor improvements or optimizations
   - ‚ö™ **LOW**: Nice-to-have enhancements

4. **PROVIDE SPECIFIC FIXES** with exact code locations and solutions
5. **PRIORITIZE ISSUES** - Focus on what must be fixed before launch vs. what can be addressed post-launch

## REPORTING FORMAT

For each issue found, provide:
```
ISSUE: [Brief description]
SEVERITY: [Critical/High/Medium/Low]
LOCATION: [Specific file and line number]
PROBLEM: [Detailed explanation]
FIX: [Exact solution or code change needed]
IMPACT: [What happens if not fixed]
```

## FINAL CHECKLIST BEFORE APPROVAL

- [ ] Zero console errors
- [ ] All core functionality works perfectly
- [ ] Forms submit and validate properly
- [ ] Navigation is intuitive and complete
- [ ] Mobile responsive and accessible
- [ ] No broken links or missing assets
- [ ] Security vulnerabilities addressed
- [ ] Performance is acceptable for production

**REMEMBER**: This is going LIVE immediately. Every issue you miss could impact real users. Be thorough, be critical, and assume nothing works until you've personally tested it.

**OUTPUT REQUIREMENTS**: 
1. Complete audit report with all findings
2. Prioritized action plan for fixes
3. Final GO/NO-GO recommendation for launch
4. Post-launch monitoring recommendations

Act as if your reputation as a lead developer depends on this audit being perfect.