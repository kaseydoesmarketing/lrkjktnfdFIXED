Fix my TitleTesterPro app's OAuth authentication while preserving my existing frontend design. Here are the exact issues and solutions needed:

PROBLEM: OAuth authentication is failing with "oauth_failed" error despite having all required environment variables configured.

ENVIRONMENT VARIABLES (already configured in secrets):
- GOOGLE_CLIENT_ID: 618794070994-n4n3b75oktui4efj7671il3jvef23peu.apps.googleusercontent.com
- GOOGLE_CLIENT_SECRET: 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
- YOUTUBE_API_KEY: AIzaSyDuyrmfMpeYZrFnAMwSodGQB56A57JmzHCQ
- SESSION_SECRET: 85DvMXCnQEUNuGR+rRZ6JxPebaC0deT2ftCQ09gK/f/TFQyDyCdolY9z7F46LK2zICIZW5MFrSLvUzztfDE1KA==
- REACT_APP_SUPABASE_URL: https://dnezcshuzdkhzrcjfwaq.supabase.co
- REACT_APP_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRuZXpjc2h1emRraHpyY2pmd2FxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE1MDI3NzMsImV4cCI6MjA2NzA3ODc3M30.8jwPTaxqkfIj3DmJj5rPxato5g00zBXvh1n7WDrPlSs

FIXES NEEDED:

1. UPDATE server.js with proper Express.js OAuth configuration:
   - Add CORS configuration for React frontend communication
   - Configure Passport.js with Google OAuth strategy  
   - Add proper session management with express-session
   - Include YouTube API scopes in OAuth: ['profile', 'email', 'https://www.googleapis.com/auth/youtube.readonly', 'https://www.googleapis.com/auth/youtube']
   - Set up proper OAuth callback routes at /api/auth/google and /api/auth/google/callback
   - Configure Supabase database integration for user storage

2. CREATE database schema with these tables:
   - users (id, google_id, email, name, access_token, refresh_token, created_at, last_login)
   - ab_tests (id, user_id, video_id, title_variants, status, created_at)
   - test_results (id, test_id, title_variant, views, clicks, ctr, recorded_at)

3. PRESERVE existing frontend files completely - do NOT modify:
   - Any React components
   - CSS styling files  
   - Frontend routing
   - UI/UX design elements

4. ADD proper middleware:
   - helmet for security
   - express-rate-limit for API protection
   - compression for performance

5. INSTALL required dependencies if missing:
   - passport, passport-google-oauth20
   - express-session, @supabase/supabase-js
   - cors, helmet, express-rate-limit

TECH STACK: React frontend + Express.js backend + Supabase PostgreSQL database

GOAL: Fix OAuth authentication to allow YouTube login while keeping existing design intact.

Please implement these fixes and ensure OAuth works with the configured Google Cloud credentials.